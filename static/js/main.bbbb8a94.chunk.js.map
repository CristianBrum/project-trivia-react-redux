{"version":3,"sources":["trivia.png","services/getToken.js","actions/index.js","pages/Home/Home.jsx","helpers/styleAnswers.js","components/Questions.js","components/Header.jsx","pages/GamePage/GamePage.js","pages/Settings/Settings.js","pages/feedback/Feedback.js","images/trophy-solid.svg","pages/ranking/Ranking.js","reducers/HomeReducer.js","reducers/login.js","reducers/ScoreReducer.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["module","exports","getToken","a","async","fetch","data","json","token","submitToken","type","loading","Home","state","playerName","email","handleChange","bind","handlePlayButton","renderPlayButton","renderSettingsButton","savePlayerToLocalStorage","target","name","value","this","setState","length","test","localStorage","setItem","JSON","stringify","player","assertions","score","gravatarEmail","props","dispatchToken","dispatchLogin","to","className","disabled","data-testid","onClick","src","logo","alt","htmlFor","autoComplete","id","placeholder","onChange","Component","connect","dispatch","submitLogin","handleStyleAnswers","document","getElementsByName","forEach","answerBtn","getAttribute","style","Questions","indexQuestion","showNextButton","timeCount","totalScore","handleNext","handleNextStyle","handleCorretAnswer","handleLocalStorage","handleErrorAnswer","timerCounter","renderCorretBtn","renderWrongBtn","handleDisableButtons","easyScore","mediumScore","hardScore","getQuestions","nextProps","nextState","clearInterval","myInteval","setInterval","prevState","retrievelocalStorage","parse","getItem","difficulty","sumScore","questions","currentQuestionDifficulty","answer","index","key","calcFinalScore","dispatchScore","picture","md5","toString","currentRank","newRank","setRankToStorage","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","answers","sort","category","question","map","homeReducer","login","response","results","fetchQuestions","totalAssertions","submitScore","Header","ScoreReducer","GamePage","Settings","Feedback","renderFeedback","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","focusable","role","viewBox","ref","ForwardRef","forwardRef","Ranking","ranking","b","class","width","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","exact","path","component","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,oC,0fCA5B,SAAeC,IAAf,mBAAAC,EAAAC,OAAA,sDACD,oDADC,WAAAD,EAAA,MAEME,MADP,sDADC,cAEPC,EAFO,kBAAAH,EAAA,MAGMG,EAAKC,QAHX,cAGPA,EAHO,OAILC,EAAUD,EAAVC,MAJK,kBAKNA,GALM,qCCER,IAuBMC,EAAc,SAACD,GAAD,MAAY,CACrCE,KAtB0B,eAuB1BF,QACAG,SAAS,ICpBLC,E,YACJ,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,WAAY,GACZC,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,gBAC5B,EAAKI,yBAA2B,EAAKA,yBAAyBJ,KAA9B,gBAZpB,E,0EAeDK,GAAS,IACZC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdC,KAAKC,SAAL,eACGH,EAAOC,M,yCAIQ,IAAD,EACaC,KAAKZ,MAA3BC,EADS,EACTA,WAAYC,EADH,EACGA,MAEpB,OAAID,EAAWa,SADI,2CACiBC,KAAKb,K,iDAMf,IAAD,EACKU,KAAKZ,MAA3BC,EADiB,EACjBA,WAAYC,EADK,EACLA,MACpBc,aAAaC,QAAQ,QAASC,KAAKC,UAAU,CAAEC,OAAQ,CACrDV,KAAMT,EAAYoB,WAAY,EAAGC,MAAO,EAAGC,cAAerB,Q,yCAI1C,IAAD,SACwBU,KAAKY,MAAtCC,EADS,EACTA,cAAeC,EADN,EACMA,cADN,EAEad,KAAKZ,MAA3BE,EAFS,EAETA,MAAOD,EAFE,EAEFA,WAEf,OACE,6BACE,kBAAC,IAAD,CAAM0B,GAAG,QAAQC,UAAU,eACzB,4BACEC,SAAWjB,KAAKP,mBAChBR,KAAK,SACL+B,UAAU,WACVE,cAAY,WACZC,QAAU,WACRN,IACAC,EAAcxB,EAAOD,GACrB,EAAKO,6BART,a,6CAmBN,OACE,4BACEX,KAAK,SACLiC,cAAY,eACZF,UAAU,gBAEV,kBAAC,IAAD,CAAMD,GAAG,aAAT,0B,+BAKI,IAAD,SACuBf,KAAKZ,MAA3BE,EADD,EACCA,MAAOD,EADR,EACQA,WAEf,OACE,yBAAK2B,UAAU,QACb,4BAAQA,UAAU,cAChB,yBAAKI,IAAMC,IAAOL,UAAU,WAAWM,IAAI,UAE7C,0BAAMN,UAAU,QACd,2BAAOO,QAAQ,cACb,2BACEC,aAAa,MACbR,UAAU,aACVlB,KAAK,aACLC,MAAQV,EACRJ,KAAK,OACLwC,GAAG,aACHP,cAAY,oBACZQ,YAAY,OACZC,SAAW,YAAiB,IAAd9B,EAAa,EAAbA,OAAe,EAAKN,aAAaM,OAGnD,2BAAO0B,QAAQ,eACb,2BACEP,UAAU,cACVlB,KAAK,QACLC,MAAQT,EACRL,KAAK,QACLwC,GAAG,cACHP,cAAY,uBACZQ,YAAY,QACZC,SAAW,YAAiB,IAAd9B,EAAa,EAAbA,OAAe,EAAKN,aAAaM,OAGlDG,KAAKN,mBACLM,KAAKL,6B,GA/GGiC,aA2HJC,cAAQ,MALI,SAACC,GAAD,MAAe,CACxCjB,cAAe,kBAAMiB,GD3FQ,SAAOA,GAAP,eAAApD,EAAAC,OAAA,uDAC7BmD,EAjBiC,CACjC7C,KAlB2B,gBAmB3BC,SAAS,IAcoB,WAAAR,EAAA,MAETD,KAFS,cAEvBM,EAFuB,OAG7BqB,aAAaC,QAAQ,QAAStB,GAHD,kBAItB+C,EAAS9C,EAAYD,KAJC,yCC4F7B+B,cAAe,SAACxB,EAAOD,GAAR,OAAuByC,EDlHb,SAACxC,EAAOD,GAAR,MAAwB,CACjDJ,KAV0B,eAW1BK,QACAD,cC+G+C0C,CAAYzC,EAAOD,QAGrDwC,CAAkC1C,G,kCCjI1C,SAAS6C,IACOC,SAASC,kBAAkB,UACnCC,SAAQ,SAACC,GAC0B,mBAA1CA,EAAUC,aAAa,eACzBD,EAAUE,MAAQ,oCAElBF,EAAUE,MAAQ,sC,ICAlBC,E,YACJ,WAAY3B,GAAQ,IAAD,8BACjB,4CAAMA,KACDxB,MAAQ,CACXoD,cAAe,EACf/B,WAAY,EACZgC,gBAAgB,EAChBC,UAAW,GACXC,WAAY,GAEd,EAAKC,WAAa,EAAKA,WAAWpD,KAAhB,gBAClB,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBACvB,EAAKsD,mBAAqB,EAAKA,mBAAmBtD,KAAxB,gBAC1B,EAAKuD,mBAAqB,EAAKA,mBAAmBvD,KAAxB,gBAC1B,EAAKwD,kBAAoB,EAAKA,kBAAkBxD,KAAvB,gBACzB,EAAKyD,aAAe,EAAKA,aAAazD,KAAlB,gBACpB,EAAK0D,gBAAkB,EAAKA,gBAAgB1D,KAArB,gBACvB,EAAK2D,eAAiB,EAAKA,eAAe3D,KAApB,gBACtB,EAAK4D,qBAAuB,EAAKA,qBAAqB5D,KAA1B,gBAC5B,EAAK6D,UAAY,EAAKA,UAAU7D,KAAf,gBACjB,EAAK8D,YAAc,EAAKA,YAAY9D,KAAjB,gBACnB,EAAK+D,UAAY,EAAKA,UAAU/D,KAAf,gBApBA,E,sKAwBeQ,KAAKY,MAA7B4C,E,EAAAA,aAAczE,E,EAAAA,M,mBAChByE,EAAazE,I,OACnBiB,KAAKiD,e,6FAGeQ,EAAWC,GAG/B,OADY,EADU1D,KAAKZ,MAAnBsD,UACI,I,6CAKZiB,cAAc3D,KAAK4D,a,qCAGL,IAAD,OAEb5D,KAAK4D,UAAYC,aAAY,WAC3B,EAAK5D,UAAS,SAAC6D,GAAD,MAAgB,CAC5BpB,UAAWoB,EAAUpB,UAAY,QAHf,O,mCAQV,IACJF,EAAkBxC,KAAKZ,MAAvBoD,cAEJA,GADiB,GAEnBxC,KAAKC,SAAS,CACZuC,cAAeA,EAAgB,EAC/BC,gBAAgB,EAChBC,UAAW,O,wCAMMT,SAASC,kBAAkB,UACnCC,SAAQ,SAACC,GAAgBA,EAAUE,MAAQ,Q,2CAGpC,IAAD,OACnBtC,KAAKC,UAAS,SAACb,GAAD,MAAY,CACxBqB,WAAYrB,EAAMqB,WAAa,EAC/BgC,gBAAgB,MACd,kBAAM,EAAKM,0B,6CAKf,QAD2B/C,KAAKZ,MAAxBqD,iB,0CAQRzC,KAAKC,UAAS,iBAAO,CACnBwC,gBAAgB,Q,2CAIE,IAAD,EACgBzC,KAAKZ,MAAhCqB,EADW,EACXA,WAAYkC,EADD,EACCA,WACdoB,EAAuBzD,KAAK0D,MAAM5D,aAAa6D,QAAQ,UAC7DF,EAAqBvD,OAAOC,WAAaA,EACzCsD,EAAqBvD,OAAOE,MAAQiC,EACpCvC,aAAaC,QAAQ,QAASC,KAAKC,UAAUwD,M,gCAGrCG,EAAYxB,GAEpB,GAAmB,SAAfwB,EAAuB,CACzB,IACMC,EADe,GAFV,EAGsBzB,EACjC1C,KAAKC,UAAS,SAACb,GAAD,MAAY,CACxBuD,WAAYvD,EAAMuD,WAAawB,S,kCAKzBD,EAAYxB,GAEtB,GAAmB,WAAfwB,EAAyB,CAC3B,IACMC,EADe,GAFR,EAGoBzB,EACjC1C,KAAKC,UAAS,SAACb,GAAD,MAAY,CACxBuD,WAAYvD,EAAMuD,WAAawB,S,gCAK3BD,EAAYxB,GACpB,GAAmB,SAAfwB,EAAuB,CACzB,IACMC,EADe,GACYzB,EACjC1C,KAAKC,UAAS,SAACb,GAAD,MAAY,CACxBuD,WAAYvD,EAAMuD,WAAawB,S,uCAKnB,IACRC,EAAcpE,KAAKY,MAAnBwD,UADO,EAEsBpE,KAAKZ,MAAlCoD,EAFO,EAEPA,cAAeE,EAFR,EAEQA,UACjB2B,EAA4BD,EAAU5B,GAAe0B,WAC3DlE,KAAKuD,UAAUc,EAA2B3B,GAC1C1C,KAAKsD,YAAYe,EAA2B3B,GAC5C1C,KAAKqD,UAAUgB,EAA2B3B,K,sCAG5B4B,EAAQC,GAAQ,IAAD,OACrB7B,EAAc1C,KAAKZ,MAAnBsD,UACR,OACE,4BACE1B,UAAU,SACVwD,IAAMD,EACNtF,KAAK,SACLiC,cAAY,iBACZD,SAAyB,IAAdyB,GAAmB1C,KAAKoD,uBACnCtD,KAAK,SACLqB,QAAU,WACR,EAAK2B,qBACLd,IACA,EAAKyC,mBAGNH,K,qCAIQA,EAAQC,GAAQ,IAAD,OACpB7B,EAAc1C,KAAKZ,MAAnBsD,UACR,OACE,4BACE1B,UAAU,eACVwD,IAAMD,EACNtF,KAAK,SACLkC,QAAU,WACR,EAAK6B,oBACLhB,KAEFd,cAAA,uBAA8BqD,GAC9BtD,SAAyB,IAAdyB,GAAmB1C,KAAKoD,uBACnCtD,KAAK,UAEJwE,K,+BAIG,IAAD,SACiDtE,KAAKY,MAArDwD,EADD,EACCA,UAAWM,EADZ,EACYA,cAAepF,EAD3B,EAC2BA,MAAOD,EADlC,EACkCA,WADlC,EAIHW,KAAKZ,MADPoD,EAHK,EAGLA,cAAeC,EAHV,EAGUA,eAAgBC,EAH1B,EAG0BA,UAAWC,EAHrC,EAGqCA,WAAYlC,EAHjD,EAGiDA,WAGxD,GAAI+B,EADqB,EAGvB,ODlLC,SAA0B1C,EAAMR,EAAOoB,GAC5C,IAAMiE,EAAO,0CAAsCC,IAAItF,GAAOuF,YAE9D,GAAIvE,KAAK0D,MAAM5D,aAAa6D,QAAQ,YAAa,CAC/C,IAAMa,EAAcxE,KAAK0D,MAAM5D,aAAa6D,QAAQ,YAC9Cc,EAAO,sBAAOD,GAAP,CAAoB,CAAEhF,OAAMY,QAAOiE,aAChDvE,aAAaC,QAAQ,UAAWC,KAAKC,UAAUwE,QAC1C,CACL,IAAMA,EAAU,CAAC,CAAEjF,OAAMY,QAAOiE,YAChCvE,aAAaC,QAAQ,UAAWC,KAAKC,UAAUwE,KCwK7CC,CAAiB3F,EAAYC,EAAOqD,GAC7B,kBAAC,IAAD,CAAU5B,GAAG,cAEtB,GAAIqD,EAAUlE,QAAUsC,GALC,EAKkC,CACzD,IAAMyC,EAAgBb,EAAU5B,GAAe0C,eACzCC,EAAmBf,EAAU5B,GAAe4C,kBAC5CC,EAAU,CAACJ,GAAD,mBAAmBE,IAAkBG,OAHI,EAI1BlB,EAAU5B,GAAjC+C,EAJiD,EAIjDA,SAAUC,EAJuC,EAIvCA,SAClB,OACE,6BAASxE,UAAU,oBACjB,yBAAKA,UAAU,WAAWE,cAAY,qBAAsBqE,GAC5D,yBAAKvE,UAAU,WAAWE,cAAY,iBAAkBsE,GACxD,8BAAO9C,GACN2C,EAAQI,KAAI,SAACnB,EAAQC,GACpB,OAAID,IAAWW,EACL,EAAK/B,gBAAgBoB,EAAQC,GAC7B,EAAKpB,eAAemB,EAAQC,MAGvC9B,GAAgC,IAAdC,EACjB,4BACEzD,KAAK,SACL+B,UAAU,WACVE,cAAY,WACZC,QAAU,WACR,EAAKyB,aAAc,EAAKC,kBACxB6B,EAAc/B,EAAYlC,KAN9B,cAUa,MAIrB,OAAO,6BAASO,UAAU,WAAnB,qB,GAxNaY,aA8OTC,eAPS,SAACzC,GAAD,MAAY,CAClCL,MAAOK,EAAMsG,YAAY3G,MACzBqF,UAAWhF,EAAMsG,YAAYtB,UAC7B9E,MAAOF,EAAMuG,MAAMrG,MACnBD,WAAYD,EAAMuG,MAAMtG,eATC,SAACyC,GAAD,MAAe,CACxC0B,aAAc,SAACzE,GAAD,OAAW+C,EHhMG,SAAC/C,GAAD,OAAW,SAAO+C,GAAP,mBAAApD,EAAAC,OAAA,kEAAAD,EAAA,MAChBE,MAAM,8CAAD,OAA+CG,KADpC,cACjC6G,EADiC,kBAAAlH,EAAA,MAEbkH,EAAS9G,QAFI,gBAE/B+G,EAF+B,EAE/BA,QACR/D,EAf8C,CAC9C7C,KA9B+B,oBA+B/BmF,UAa0ByB,IAHa,sCGgMLC,CAAe/G,KACjD2F,cAAe,SAAChE,EAAOD,GAAR,OAAuBqB,EHpOb,SAACpB,EAAOD,GAAR,MAAwB,CACjDxB,KAH0B,eAI1B0D,WAAYjC,EACZqF,gBAAiBtF,GGiO8BuF,CAAYtF,EAAOD,QAUrDoB,CAA6CU,GChPtD0D,G,wLACM,IAAD,EACmCjG,KAAKY,MAAvCvB,EADD,EACCA,WAAYC,EADb,EACaA,MAAOqD,EADpB,EACoBA,WAE3B,OACE,gCACE,yBAAK3B,UAAU,UACb,yBAAKI,IAAG,0CAAsCwD,IAAItF,GAAOuF,YAAevD,IAAMjC,EAAa6B,cAAY,2BACvG,2BAAOF,UAAU,YAAYO,QAAQ,aAArC,WAEE,0BAAME,GAAG,YAAYP,cAAY,sBAAuB7B,KAG5D,uCAEE,0BAAM6B,cAAY,gBACfyB,S,GAhBQf,cAmCNC,eANS,SAACzC,GAAD,MAAY,CAClCE,MAAOF,EAAMuG,MAAMrG,MACnBD,WAAYD,EAAMuG,MAAMtG,WACxBsD,WAAYvD,EAAM8G,aAAavD,cAGlBd,CAAyBoE,GC1BzBE,E,iLATX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALevE,aCFFwE,E,iLAEjB,OACE,6BACE,wBAAIlF,cAAY,kBAAhB,4B,GAJ8BU,aCKhCyE,G,mBACJ,WAAYzF,GAAQ,IAAD,8BACjB,4CAAMA,KACDxB,MAAQ,CACXuD,WAAY/B,EAAM+B,WAClBoD,gBAAiBnF,EAAMmF,iBAEzB,EAAKO,eAAiB,EAAKA,eAAe9G,KAApB,gBANL,E,8EAUjB,IADe,EAEyBQ,KAAKZ,MAArCuD,EAFO,EAEPA,WAAYoD,EAFL,EAEKA,gBACpB,OAAIA,EAFe,EAIf,6BACE,uBAAG7E,cAAY,iBAAf,uBACA,yBAAKF,UAAU,cACb,8CACA,uBAAGA,UAAU,MAAME,cAAY,2BAA2B6E,GAC1D,mCAEuB,IAApBA,EAAwB,UAAS,WAGtC,yBAAK/E,UAAU,UACb,0CACA,uBAAGA,UAAU,MAAME,cAAY,wBAAwByB,GACvD,mCAEkB,IAAfA,EAAmB,KAAO,OAOnC,6BACE,yBAAK3B,UAAU,cACb,8CACA,uBAAGA,UAAU,QAAQE,cAAY,2BAA2B6E,GAC5D,mCAEuB,IAApBA,EAAwB,UAAS,WAGtC,yBAAK/E,UAAU,UACb,0CACA,uBAAGA,UAAU,QAAQE,cAAY,wBAAwByB,GACzD,mCAEkB,IAAfA,EAAmB,KAAO,S,+BASnC,OACE,oCACE,kBAAC,EAAD,MACE3C,KAAKsG,iBACP,yBAAKtF,UAAU,mBACb,kBAAC,IAAD,CAAMD,GAAG,WACP,4BAAQC,UAAU,cAAc/B,KAAK,SAASiC,cAAY,eAA1D,gBAIF,kBAAC,IAAD,CAAMH,GAAG,KACP,4BACEI,QAAQ,UACRH,UAAU,iBACV/B,KAAK,SACLiC,cAAY,kBAJd,0B,GAvEWU,cA+FRC,eALS,SAACzC,GAAD,MAAY,CAClCuD,WAAYvD,EAAM8G,aAAavD,WAC/BoD,gBAAiB3G,EAAM8G,aAAaH,mBAGvBlE,CAAyBwE,G,OCtGxC,SAASE,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAU5G,GAAU,IAAK,IAAI6G,EAAI,EAAGA,EAAIC,UAAUzG,OAAQwG,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIlC,KAAOoC,EAAcJ,OAAOK,UAAUC,eAAeC,KAAKH,EAAQpC,KAAQ3E,EAAO2E,GAAOoC,EAAOpC,IAAY,OAAO3E,IAA2BmH,MAAMhH,KAAM2G,WAEhT,SAASM,EAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEpC,EAAKkC,EAAnE7G,EAEzF,SAAuC+G,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DpC,EAAKkC,EAA5D7G,EAAS,GAAQsH,EAAaX,OAAOY,KAAKR,GAAqB,IAAKF,EAAI,EAAGA,EAAIS,EAAWjH,OAAQwG,IAAOlC,EAAM2C,EAAWT,GAAQQ,EAASG,QAAQ7C,IAAQ,IAAa3E,EAAO2E,GAAOoC,EAAOpC,IAAQ,OAAO3E,EAFxMyH,CAA8BV,EAAQM,GAAuB,GAAIV,OAAOe,sBAAuB,CAAE,IAAIC,EAAmBhB,OAAOe,sBAAsBX,GAAS,IAAKF,EAAI,EAAGA,EAAIc,EAAiBtH,OAAQwG,IAAOlC,EAAMgD,EAAiBd,GAAQQ,EAASG,QAAQ7C,IAAQ,GAAkBgC,OAAOK,UAAUY,qBAAqBV,KAAKH,EAAQpC,KAAgB3E,EAAO2E,GAAOoC,EAAOpC,IAAU,OAAO3E,EAMne,IAAI6H,EAEJ,IAAMC,cAAc,OAAQ,CAC1BC,KAAM,eACNC,EAAG,ykBAGD,EAAiB,SAAwBC,GAC3C,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbpH,EAAQqG,EAAyBa,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMH,cAAc,MAAOpB,EAAS,CACzC,cAAe,OACf0B,UAAW,QACX,cAAe,MACf,YAAa,SACbjH,UAAW,mCACXkH,KAAM,MACNC,QAAS,cACTC,IAAKL,GACJnH,GAAQoH,EAAQ,IAAML,cAAc,QAAS,KAAMK,GAAS,KAAMN,IAGnEW,EAAa,IAAMC,YAAW,SAAU1H,EAAOwH,GACjD,OAAO,IAAMT,cAAc,EAAgBpB,EAAS,CAClDwB,OAAQK,GACPxH,OCkDU2H,GDhDA,I,YC/Bb,WAAY3H,GAAQ,IAAD,8BACjB,4CAAMA,KACDxB,MAAQ,CACXoJ,SAAS,GAEX,EAAKzF,mBAAqB,EAAKA,mBAAmBvD,KAAxB,gBALT,E,iFASjBQ,KAAK+C,uB,2CAIL,IAAM+B,EAAcxE,KAAK0D,MAAM5D,aAAa6D,QAAQ,YACpDjE,KAAKC,UAAS,iBAAO,CACnBuI,QAAS1D,Q,4BAIPP,GACJ,OAAc,IAAVA,EACK,cAEK,IAAVA,EACK,eAEK,IAAVA,EACK,cAEF,a,+BAGC,IAAD,OACCiE,EAAYxI,KAAKZ,MAAjBoJ,QACR,OACE,6BAASxH,UAAU,mBACjB,wBAAIE,cAAY,iBAAhB,WACA,+BACE,+BACIsH,EAAUA,EAAQlD,MAAK,SAAC5G,EAAG+J,GAAJ,OAAUA,EAAE/H,MAAQhC,EAAEgC,SAC5C+E,KAAI,WAA2BlB,GAA3B,IAAGzE,EAAH,EAAGA,KAAMY,EAAT,EAASA,MAAOiE,EAAhB,EAAgBA,QAAhB,OACH,wBACE3D,UAAY,EAAK0H,MAAMnE,GACvBjC,MAAQ,CAAEqG,MAAM,GAAD,OAAa,EAARjI,EAAL,OACf8D,IAAMD,GAEN,4BAAI,yBAAKnD,IAAMuD,EAAUrD,IAAI,aAC7B,wBAAIN,UAAU,OAAOE,cAAA,sBAA6BqD,IAAWzE,GAC7D,wBACEkB,UAAU,QACVE,cAAA,uBAA8BqD,IAFhC,UAIM7D,EAJN,YAMW,IAAV6D,GACC,4BAAI,kBAAC,EAAD,CAAMvD,UAAU,UACX,IAAVuD,GACC,4BAAI,kBAAC,EAAD,CAAMvD,UAAU,YACX,IAAVuD,GACC,4BAAI,kBAAC,EAAD,CAAMvD,UAAU,gBAErB,OAGX,kBAAC,IAAD,CAAMD,GAAG,KACP,4BACEI,QAAQ,UACRH,UAAU,cACV/B,KAAK,SACLiC,cAAY,eAJd,c,GAlEYU,c,sCCHhBgH,EAAgB,CACpB7J,MAAO,GACPqF,UAAW,GACXlF,SAAS,GAuBIwG,MApBf,WAAqD,IAAhCtG,EAA+B,uDAAvBwJ,EAAeC,EAAQ,uCAC1C5J,EAAoC4J,EAApC5J,KAAMC,EAA8B2J,EAA9B3J,QAASH,EAAqB8J,EAArB9J,MAAOqF,EAAcyE,EAAdzE,UAC9B,OAAQnF,GACR,IVR2B,gBUSzB,OAAO,eAAKG,EAAZ,CAAmBF,YAErB,IVV0B,eUWxB,OAAO,eAAKE,EAAZ,CAAmBF,UAASH,UAE9B,IVf+B,oBUgB7B,OAAO,eACFK,EADL,CAEEgF,cAGJ,QACE,OAAOhF,ICtBLwJ,EAAgB,CACpBtJ,MAAO,GACPD,WAAY,IAcCsG,MAVf,WAA+C,IAAhCvG,EAA+B,uDAAvBwJ,EAAeC,EAAQ,uCACpC5J,EAA4B4J,EAA5B5J,KAAMK,EAAsBuJ,EAAtBvJ,MAAOD,EAAewJ,EAAfxJ,WACrB,OAAQJ,GACR,IXN0B,eWOxB,OAAO,eAAKG,EAAZ,CAAmBE,QAAOD,eAC5B,QACE,OAAOD,ICZLwJ,EAAgB,CACpBjG,WAAY,EACZoD,gBAAiB,GAaJG,MAVf,WAAsD,IAAhC9G,EAA+B,uDAAvBwJ,EAAeC,EAAQ,uCAC3C5J,EAAsC4J,EAAtC5J,KAAM0D,EAAgCkG,EAAhClG,WAAYoD,EAAoB8C,EAApB9C,gBAC1B,OAAQ9G,GACR,IZJ0B,eYKxB,OAAO,eAAKG,EAAZ,CAAmBuD,aAAYoD,oBACjC,QACE,OAAO3G,ICNI0J,EAFKC,0BAAgB,CAAErD,cAAaC,QAAOO,iBCE3C8C,GAFDC,sBAAYH,EAAaI,8BAAoBC,0BAAgBC,OCE3EC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAQA,IAChB,mBCAW,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIC,UAAYtK,IAClC,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,QAAQC,UAAYtD,IACtC,kBAAC,IAAD,CAAOqD,KAAK,YAAYC,UAAYrD,IACpC,kBAAC,IAAD,CAAOoD,KAAK,YAAYC,UAAYpD,IACpC,kBAAC,IAAD,CAAOmD,KAAK,WAAWC,UAAYlB,QDRvC,OAEFtG,SAASyH,eAAe,W","file":"static/js/main.bbbb8a94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","export default async function getToken() {\n  const URL = 'https://opentdb.com/api_token.php?command=request';\n  const data = await fetch(URL);\n  const json = await data.json();\n  const { token } = json;\n  return token;\n}\n","import getToken from '../services/getToken';\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const SUBMIT_TOKEN = 'SUBMIT_TOKEN';\nexport const SUBMIT_LOGIN = 'SUBMIT_LOGIN';\nexport const SUBMIT_SCORE = 'SUBMIT_SCORE';\n\nexport const submitScore = (score, assertions) => ({\n  type: SUBMIT_SCORE,\n  totalScore: score,\n  totalAssertions: assertions,\n});\n\nexport const submitLogin = (email, playerName) => ({\n  type: SUBMIT_LOGIN,\n  email,\n  playerName,\n});\n\nexport const requestToken = () => ({\n  type: REQUEST_TOKEN,\n  loading: true,\n});\n\nexport const submitToken = (token) => ({\n  type: SUBMIT_TOKEN,\n  token,\n  loading: false,\n});\n\nexport const receiveQuestions = (questions) => ({\n  type: RECEIVE_QUESTIONS,\n  questions,\n});\n\nexport const saveToken = () => async (dispatch) => {\n  dispatch((requestToken()));\n  const token = await getToken();\n  localStorage.setItem('token', token);\n  return dispatch(submitToken(token));\n};\n\nexport const fetchQuestions = (token) => async (dispatch) => {\n  const response = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n  const { results } = await response.json();\n  dispatch(receiveQuestions(results));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './home.css';\nimport logo from '../../trivia.png';\nimport { saveToken, submitLogin } from '../../actions';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      playerName: '',\n      email: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePlayButton = this.handlePlayButton.bind(this);\n    this.renderPlayButton = this.renderPlayButton.bind(this);\n    this.renderSettingsButton = this.renderSettingsButton.bind(this);\n    this.savePlayerToLocalStorage = this.savePlayerToLocalStorage.bind(this);\n  }\n\n  handleChange(target) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handlePlayButton() {\n    const { playerName, email } = this.state;\n    const validEmail = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n    if (playerName.length && validEmail.test(email)) {\n      return false;\n    }\n    return true;\n  }\n\n  savePlayerToLocalStorage() {\n    const { playerName, email } = this.state;\n    localStorage.setItem('state', JSON.stringify({ player: {\n      name: playerName, assertions: 0, score: 0, gravatarEmail: email,\n    } }));\n  }\n\n  renderPlayButton() {\n    const { dispatchToken, dispatchLogin } = this.props;\n    const { email, playerName } = this.state;\n\n    return (\n      <div>\n        <Link to=\"/game\" className=\"link-button\">\n          <button\n            disabled={ this.handlePlayButton() }\n            type=\"button\"\n            className=\"btn-play\"\n            data-testid=\"btn-play\"\n            onClick={ () => {\n              dispatchToken();\n              dispatchLogin(email, playerName);\n              this.savePlayerToLocalStorage();\n            } }\n          >\n            Jogar\n          </button>\n        </Link>\n      </div>\n    );\n  }\n\n  renderSettingsButton() {\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"btn-settings\"\n        className=\"btn-settings\"\n      >\n        <Link to=\"/settings\">Configurações</Link>\n      </button>\n    );\n  }\n\n  render() {\n    const { email, playerName } = this.state;\n\n    return (\n      <div className=\"home\">\n        <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <form className=\"form\">\n          <label htmlFor=\"input-name\">\n            <input\n              autoComplete=\"off\"\n              className=\"input-name\"\n              name=\"playerName\"\n              value={ playerName }\n              type=\"text\"\n              id=\"input-name\"\n              data-testid=\"input-player-name\"\n              placeholder=\"Nome\"\n              onChange={ ({ target }) => { this.handleChange(target); } }\n            />\n          </label>\n          <label htmlFor=\"input-email\">\n            <input\n              className=\"input-email\"\n              name=\"email\"\n              value={ email }\n              type=\"email\"\n              id=\"input-email\"\n              data-testid=\"input-gravatar-email\"\n              placeholder=\"Email\"\n              onChange={ ({ target }) => { this.handleChange(target); } }\n            />\n          </label>\n          {this.renderPlayButton()}\n          {this.renderSettingsButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchToken: () => dispatch(saveToken()),\n  dispatchLogin: (email, playerName) => dispatch(submitLogin(email, playerName)),\n});\n\nexport default connect(null, mapDispatchToProps)(Home);\n\nHome.propTypes = {\n  dispatchToken: PropTypes.func,\n}.isRequired;\n","import md5 from 'crypto-js/md5';\n\nexport function handleStyleAnswers() {\n  const styleAnswers = document.getElementsByName('answer');\n  styleAnswers.forEach((answerBtn) => {\n    if (answerBtn.getAttribute('data-testid') === 'correct-answer') {\n      answerBtn.style = 'border: 3px solid rgb(6, 240, 15)';\n    } else {\n      answerBtn.style = 'border: 3px solid rgb(255, 0, 0)';\n    }\n  });\n}\n\nexport function setRankToStorage(name, email, score) {\n  const picture = `https://www.gravatar.com/avatar/${md5(email).toString()}`;\n\n  if (JSON.parse(localStorage.getItem('ranking'))) {\n    const currentRank = JSON.parse(localStorage.getItem('ranking'));\n    const newRank = [...currentRank, { name, score, picture }];\n    localStorage.setItem('ranking', JSON.stringify(newRank));\n  } else {\n    const newRank = [{ name, score, picture }];\n    localStorage.setItem('ranking', JSON.stringify(newRank));\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport './questions.css';\nimport { fetchQuestions, submitScore } from '../actions';\nimport { handleStyleAnswers, setRankToStorage } from '../helpers/styleAnswers';\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      indexQuestion: 0,\n      assertions: 0,\n      showNextButton: false,\n      timeCount: 30,\n      totalScore: 0,\n    };\n    this.handleNext = this.handleNext.bind(this);\n    this.handleNextStyle = this.handleNextStyle.bind(this);\n    this.handleCorretAnswer = this.handleCorretAnswer.bind(this);\n    this.handleLocalStorage = this.handleLocalStorage.bind(this);\n    this.handleErrorAnswer = this.handleErrorAnswer.bind(this);\n    this.timerCounter = this.timerCounter.bind(this);\n    this.renderCorretBtn = this.renderCorretBtn.bind(this);\n    this.renderWrongBtn = this.renderWrongBtn.bind(this);\n    this.handleDisableButtons = this.handleDisableButtons.bind(this);\n    this.easyScore = this.easyScore.bind(this);\n    this.mediumScore = this.mediumScore.bind(this);\n    this.hardScore = this.hardScore.bind(this);\n  }\n\n  async componentDidMount() {\n    const { getQuestions, token } = this.props;\n    await getQuestions(token);\n    this.timerCounter();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { timeCount } = this.state;\n    nextState = 0;\n    return (timeCount > nextState);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInteval);\n  }\n\n  timerCounter() {\n    const intervalTimer = 1000;\n    this.myInteval = setInterval(() => {\n      this.setState((prevState) => ({\n        timeCount: prevState.timeCount - 1,\n      }));\n    }, intervalTimer);\n  }\n\n  handleNext() {\n    const { indexQuestion } = this.state;\n    const maxQuestions = 5;\n    if (indexQuestion <= maxQuestions) {\n      this.setState({\n        indexQuestion: indexQuestion + 1,\n        showNextButton: false,\n        timeCount: 30,\n      });\n    }\n  }\n\n  handleNextStyle() {\n    const styleAnswers = document.getElementsByName('answer');\n    styleAnswers.forEach((answerBtn) => { answerBtn.style = ''; });\n  }\n\n  handleCorretAnswer() {\n    this.setState((state) => ({\n      assertions: state.assertions + 1,\n      showNextButton: true,\n    }), () => this.handleLocalStorage());\n  }\n\n  handleDisableButtons() {\n    const { showNextButton } = this.state;\n    if (showNextButton) {\n      return true;\n    }\n    return false;\n  }\n\n  handleErrorAnswer() {\n    this.setState(() => ({\n      showNextButton: true,\n    }));\n  }\n\n  handleLocalStorage() {\n    const { assertions, totalScore } = this.state;\n    const retrievelocalStorage = JSON.parse(localStorage.getItem('state'));\n    retrievelocalStorage.player.assertions = assertions;\n    retrievelocalStorage.player.score = totalScore;\n    localStorage.setItem('state', JSON.stringify(retrievelocalStorage));\n  }\n\n  hardScore(difficulty, timeCount) {\n    const hard = 3;\n    if (difficulty === 'hard') {\n      const defaultScore = 10;\n      const sumScore = defaultScore + (timeCount * hard);\n      this.setState((state) => ({\n        totalScore: state.totalScore + sumScore,\n      }));\n    }\n  }\n\n  mediumScore(difficulty, timeCount) {\n    const medium = 2;\n    if (difficulty === 'medium') {\n      const defaultScore = 10;\n      const sumScore = defaultScore + (timeCount * medium);\n      this.setState((state) => ({\n        totalScore: state.totalScore + sumScore,\n      }));\n    }\n  }\n\n  easyScore(difficulty, timeCount) {\n    if (difficulty === 'easy') {\n      const defaultScore = 10;\n      const sumScore = defaultScore + (timeCount);\n      this.setState((state) => ({\n        totalScore: state.totalScore + sumScore,\n      }));\n    }\n  }\n\n  calcFinalScore() {\n    const { questions } = this.props;\n    const { indexQuestion, timeCount } = this.state;\n    const currentQuestionDifficulty = questions[indexQuestion].difficulty;\n    this.hardScore(currentQuestionDifficulty, timeCount);\n    this.mediumScore(currentQuestionDifficulty, timeCount);\n    this.easyScore(currentQuestionDifficulty, timeCount);\n  }\n\n  renderCorretBtn(answer, index) {\n    const { timeCount } = this.state;\n    return (\n      <button\n        className=\"answer\"\n        key={ index }\n        type=\"button\"\n        data-testid=\"correct-answer\"\n        disabled={ timeCount === 0 || this.handleDisableButtons() }\n        name=\"answer\"\n        onClick={ () => {\n          this.handleCorretAnswer();\n          handleStyleAnswers();\n          this.calcFinalScore();\n        } }\n      >\n        {answer}\n      </button>);\n  }\n\n  renderWrongBtn(answer, index) {\n    const { timeCount } = this.state;\n    return (\n      <button\n        className=\"wrong-answer\"\n        key={ index }\n        type=\"button\"\n        onClick={ () => {\n          this.handleErrorAnswer();\n          handleStyleAnswers();\n        } }\n        data-testid={ `wrong-answer-${index}` }\n        disabled={ timeCount === 0 || this.handleDisableButtons() }\n        name=\"answer\"\n      >\n        {answer}\n      </button>);\n  }\n\n  render() {\n    const { questions, dispatchScore, email, playerName } = this.props;\n    const {\n      indexQuestion, showNextButton, timeCount, totalScore, assertions,\n    } = this.state;\n    const maxIndexQuestion = 4;\n    if (indexQuestion > maxIndexQuestion) {\n      setRankToStorage(playerName, email, totalScore);\n      return <Redirect to=\"/feedback\" />;\n    }\n    if (questions.length && indexQuestion <= maxIndexQuestion) {\n      const correctAnswer = questions[indexQuestion].correct_answer;\n      const incorrectAnswers = questions[indexQuestion].incorrect_answers;\n      const answers = [correctAnswer, ...incorrectAnswers].sort();\n      const { category, question } = questions[indexQuestion];\n      return (\n        <section className=\"section-question\">\n          <div className=\"category\" data-testid=\"question-category\">{ category }</div>\n          <div className=\"question\" data-testid=\"question-text\">{ question }</div>\n          <span>{timeCount}</span>\n          {answers.map((answer, index) => {\n            if (answer === correctAnswer) {\n              return (this.renderCorretBtn(answer, index));\n            } return (this.renderWrongBtn(answer, index));\n          })}\n\n          {showNextButton || timeCount === 0 ? (\n            <button\n              type=\"button\"\n              className=\"btn-next\"\n              data-testid=\"btn-next\"\n              onClick={ () => {\n                this.handleNext(); this.handleNextStyle();\n                dispatchScore(totalScore, assertions);\n              } }\n            >\n              Próxima\n            </button>) : null }\n        </section>\n      );\n    }\n    return <section className=\"loading\">carregando...</section>;\n  }\n}\n\nQuestions.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object),\n  getQuestions: PropTypes.func,\n  token: PropTypes.string,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  getQuestions: (token) => dispatch(fetchQuestions(token)),\n  dispatchScore: (score, assertions) => dispatch(submitScore(score, assertions)),\n});\n\nconst mapStateToProps = (state) => ({\n  token: state.homeReducer.token,\n  questions: state.homeReducer.questions,\n  email: state.login.email,\n  playerName: state.login.playerName,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport './header.css';\n\nclass Header extends Component {\n  render() {\n    const { playerName, email, totalScore } = this.props;\n\n    return (\n      <header>\n        <div className=\"player\">\n          <img src={ `https://www.gravatar.com/avatar/${md5(email).toString()}` } alt={ playerName } data-testid=\"header-profile-picture\" />\n          <label className=\"user-name\" htmlFor=\"user-name\">\n            Jogador:\n            <span id=\"user-name\" data-testid=\"header-player-name\">{ playerName }</span>\n          </label>\n        </div>\n        <div>\n          Pontos:\n          <span data-testid=\"header-score\">\n            {totalScore}\n          </span>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  playerName: PropTypes.string,\n  email: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  email: state.login.email,\n  playerName: state.login.playerName,\n  totalScore: state.ScoreReducer.totalScore,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport Questions from '../../components/Questions';\nimport Header from '../../components/Header';\n\nclass GamePage extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Questions />\n      </>\n    );\n  }\n}\n\nexport default GamePage;\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  render() {\n    return (\n      <div>\n        <h2 data-testid=\"settings-title\">Configurações</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from '../../components/Header';\nimport './feedback.css';\n\nclass Feedback extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalScore: props.totalScore,\n      totalAssertions: props.totalAssertions,\n    };\n    this.renderFeedback = this.renderFeedback.bind(this);\n  }\n\n  renderFeedback() {\n    const worstScore = 3;\n    const { totalScore, totalAssertions } = this.state;\n    if (totalAssertions < worstScore) {\n      return (\n        <div>\n          <p data-testid=\"feedback-text\">Podia ser melhor...</p>\n          <div className=\"assertions\">\n            <p>Você acertou</p>\n            <p className=\"red\" data-testid=\"feedback-total-question\">{totalAssertions}</p>\n            <p>\n              Quest\n              {totalAssertions !== 1 ? 'ões!' : 'ão!'}\n            </p>\n          </div>\n          <div className=\"scores\">\n            <p>Um total de</p>\n            <p className=\"red\" data-testid=\"feedback-total-score\">{totalScore}</p>\n            <p>\n              Ponto\n              {totalScore !== 1 ? 's!' : '!'}\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div className=\"assertions\">\n          <p>Você acertou</p>\n          <p className=\"green\" data-testid=\"feedback-total-question\">{totalAssertions}</p>\n          <p>\n            Quest\n            {totalAssertions !== 1 ? 'ões!' : 'ão!'}\n          </p>\n        </div>\n        <div className=\"scores\">\n          <p>Um total de</p>\n          <p className=\"green\" data-testid=\"feedback-total-score\">{totalScore}</p>\n          <p>\n            Ponto\n            {totalScore !== 1 ? 's!' : '!'}\n          </p>\n        </div>\n      </div>\n\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        { this.renderFeedback() }\n        <div className=\"feedback-button\">\n          <Link to=\"ranking\">\n            <button className=\"btn-ranking\" type=\"button\" data-testid=\"btn-ranking\">\n              VER RANKING\n            </button>\n          </Link>\n          <Link to=\"/\">\n            <button\n              onClick=\"refresh\"\n              className=\"btn-play-again\"\n              type=\"button\"\n              data-testid=\"btn-play-again\"\n            >\n              Jogar Novamente\n            </button>\n          </Link>\n        </div>\n      </>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  totalScore: PropTypes.number,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  totalScore: state.ScoreReducer.totalScore,\n  totalAssertions: state.ScoreReducer.totalAssertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z\"\n});\n\nvar SvgTrophySolid = function SvgTrophySolid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"trophy\",\n    className: \"svg-inline--fa fa-trophy fa-w-18\",\n    role: \"img\",\n    viewBox: \"0 0 576 512\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTrophySolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/trophy-solid.f5a4ef0d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './ranking.css';\nimport { ReactComponent as Logo } from '../../images/trophy-solid.svg';\n\nclass Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: false,\n    };\n    this.handleLocalStorage = this.handleLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleLocalStorage();\n  }\n\n  handleLocalStorage() {\n    const currentRank = JSON.parse(localStorage.getItem('ranking'));\n    this.setState(() => ({\n      ranking: currentRank,\n    }));\n  }\n\n  class(index) {\n    if (index === 0) {\n      return 'first-place';\n    }\n    if (index === 1) {\n      return 'second-place';\n    }\n    if (index === 2) {\n      return 'third-place';\n    }\n    return 'unranked';\n  }\n\n  render() {\n    const { ranking } = this.state;\n    return (\n      <section className=\"section-ranking\">\n        <h2 data-testid=\"ranking-title\">Ranking</h2>\n        <table>\n          <tbody>\n            { ranking ? ranking.sort((a, b) => b.score - a.score)\n              .map(({ name, score, picture }, index) => (\n                <tr\n                  className={ this.class(index) }\n                  style={ { width: `${score * 2}px` } }\n                  key={ index }\n                >\n                  <td><img src={ picture } alt=\"profile\" /></td>\n                  <td className=\"name\" data-testid={ `player-name-${index}` }>{name}</td>\n                  <td\n                    className=\"score\"\n                    data-testid={ `player-score-${index}` }\n                  >\n                    {`${score} Pontos`}\n                  </td>\n                  {index === 0 && (\n                    <td><Logo className=\"gold\" /></td>)}\n                  {index === 1 && (\n                    <td><Logo className=\"silver\" /></td>)}\n                  {index === 2 && (\n                    <td><Logo className=\"bronze\" /></td>)}\n                </tr>\n              )) : null }\n          </tbody>\n        </table>\n        <Link to=\"/\">\n          <button\n            onClick=\"refresh\"\n            className=\"button-home\"\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n          >\n            Home\n          </button>\n        </Link>\n      </section>\n    );\n  }\n}\n\nexport default Ranking;\n","import { REQUEST_TOKEN, SUBMIT_TOKEN, RECEIVE_QUESTIONS } from '../actions';\n\nconst INITIAL_STATE = {\n  token: '',\n  questions: [],\n  loading: false,\n};\n\nfunction homeReducer(state = INITIAL_STATE, action) {\n  const { type, loading, token, questions } = action;\n  switch (type) {\n  case REQUEST_TOKEN:\n    return { ...state, loading };\n\n  case SUBMIT_TOKEN:\n    return { ...state, loading, token };\n\n  case RECEIVE_QUESTIONS:\n    return {\n      ...state,\n      questions,\n    };\n\n  default:\n    return state;\n  }\n}\n\nexport default homeReducer;\n","import { SUBMIT_LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  playerName: '',\n\n};\n\nfunction login(state = INITIAL_STATE, action) {\n  const { type, email, playerName } = action;\n  switch (type) {\n  case SUBMIT_LOGIN:\n    return { ...state, email, playerName };\n  default:\n    return state;\n  }\n}\n\nexport default login;\n","import { SUBMIT_SCORE } from '../actions';\n\nconst INITIAL_STATE = {\n  totalScore: 0,\n  totalAssertions: 0,\n};\n\nfunction ScoreReducer(state = INITIAL_STATE, action) {\n  const { type, totalScore, totalAssertions } = action;\n  switch (type) {\n  case SUBMIT_SCORE:\n    return { ...state, totalScore, totalAssertions };\n  default:\n    return state;\n  }\n}\n\nexport default ScoreReducer;\n","import { combineReducers } from 'redux';\nimport homeReducer from './HomeReducer';\nimport login from './login';\nimport ScoreReducer from './ScoreReducer';\n\nconst rootReducer = combineReducers({ homeReducer, login, ScoreReducer });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport GamePage from './pages/GamePage/GamePage';\nimport Settings from './pages/Settings/Settings';\nimport Feedback from './pages/feedback/Feedback';\nimport Ranking from './pages/ranking/Ranking';\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route exact path=\"/game\" component={ GamePage } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/feedback\" component={ Feedback } />\n        <Route path=\"/ranking\" component={ Ranking } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}